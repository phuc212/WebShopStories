@model DemoFIN3.Core.Models.Story

@{
    ViewBag.Title = "Edit";
}

<script src="~/Areas/Admin/Themes/ckeditor/ckeditor.js"></script>

<div class="card-header d-flex justify-content-between align-items-center">
    <div class="text-uppercase">
        @Html.DisplayFor(model => model.Title) <i class="fas fa-chevron-right"></i>
        <i class="fas fa-edit"></i>
        Edit
    </div>
    <div class="breadcrumb">
    </div>
</div>


@using (Html.BeginForm("Edit", "StoriesAdmin", new { area = "Admin" }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal mb-3">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", tabindex = "1", autofocus = "" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.ShortDescription, 10, 137, new { htmlAttributes = new { @id = "ShortDescription", @class = "form-control", tabindex = "2" } })
            @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            <script>
                CKEDITOR.replace("ShortDescription");
            </script>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UrlSlug, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UrlSlug, new { htmlAttributes = new { @class = "form-control", tabindex = "3" } })
            @Html.ValidationMessageFor(model => model.UrlSlug, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="row col-md-10">
            <div class="col-md-10">
                @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label" }) <span class="text-danger">(*)</span>
                <div class="col text-box">
                    <input type="file" onchange="validateImage()" accept="image/*" name="ImageFile" class="custom-file-input form-control" id="customfile" tabindex="3">
                    <label class="custom-file-label" for="customfile">Choose story image</label>
                </div>
            </div>
            <div class="col-md-2" style="text-align: end">
                <img id="ImageFile" class="img-thumbnail" src="@Model.ImageUrl" width="100" height="60" />
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PublishDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PublishDate, new { htmlAttributes = new { @class = "form-control", tabindex = "5" } })
            @Html.ValidationMessageFor(model => model.PublishDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StoryStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EnumDropDownListFor(e => e.StoryStatus, htmlAttributes: new { @class = "form-control", tabindex = "6" })
                @Html.ValidationMessageFor(model => model.StoryStatus, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CategoryId, "Source", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SourceId", null, htmlAttributes: new { @class = "form-control", tabindex = "7" })
            @Html.ValidationMessageFor(model => model.SourceId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CategoryId, "Category Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control", tabindex = "8" })
            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AuthorId, "Author Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("AuthorId", null, htmlAttributes: new { @class = "form-control", tabindex = "9" })
            @Html.ValidationMessageFor(model => model.AuthorId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-inline col-md-10 d-flex justify-content-sm-end">
        <div>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
        </div>
        <div class="ml-2">
            <input type="submit" value="Save" class="btn btn-primary" id="btn-save" />
        </div>
    </div>
</div>
}

@section Scripts{
    <script type="text/javascript">
        var showToast = (type = "success", message = "Delete success!") => {
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": true,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };
            toastr[type](message);
        }

        function validateImage() {
            var formData = new FormData();
            var file = document.getElementById("customfile").files[0];
            formData.append("Filedata", file);
            var t = file.type.split('/').pop().toLowerCase();
            if (t != "jpeg" && t != "jpg" && t != "png" && t != "bmp" && t != "gif") {
                alert('Please select a valid image file');
                document.getElementById("customfile").value = '';
                return false;
            }
            return true;
        }
    </script>
    <script>
        $(document).ready(function () {
            $(".custom-file-input").on("change", function () {
                var fileName = $(this).val().split("\\").pop();
                $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
                $('#ImageFile').attr('src', window.URL.createObjectURL($(this)[0].files[0]))
            });

            $('#btn-save').on('click', function (e) {
                e.preventDefault();
                let data = new FormData();
                data.append('Id', $('input[name=Id]').val());
                data.append('AuthorId', $('[name=AuthorId]').val());
                data.append('CategoryId', $('[name=CategoryId]').val());
                data.append('SourceId', $('[name=SourceId]').val());
                data.append('Title', $('input[name=Title]').val());
                data.append('PublishDate', $('input[name=PublishDate]').val());
                data.append('UpdatedOn', $('input[name=UpdatedOn]').val());
                data.append('UrlSlug', $('input[name=UrlSlug]').val());
                data.append('StoryStatus', $('[name=StoryStatus]').val());
                data.append('ShortDescription', CKEDITOR.instances.ShortDescription.getData());
                data.append('ImageFile', $('input[name=ImageFile]').prop('files')[0]);
                $('.loading-bottom-right').css('display', 'block');
                document.body.scrollTop = document.documentElement.scrollTop = 0;
                $.ajax({
                    url: "@Url.Action("Edit", "StoriesAdmin", new { area = "Admin" })",
                    type: 'POST',
                    data: data,
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function (res) {
                        if (res.code === 200) {
                            showToast("success", res.Message);
                            setTimeout(function () {
                                window.location.href = "@Url.Action("Index", "StoriesAdmin")";
                            }, 5000);
                        }
                        else if (res.code === 400) {
                            showToast("error", "Data is not valid!");
                        }
                    },
                    error: function (jqXHR, exception) {
                        console.log(exception);
                        let res = JSON.parse(jqXHR.responseText)
                        showToast("error", res.Message);
                        console.log(jqXHR);
                    }
                });
            })
        });
    </script>
}
